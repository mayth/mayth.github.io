<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hello, (forgotten) world ☂</title><link>https://aquarite.info/posts/</link><description>Recent content in Posts on Hello, (forgotten) world ☂</description><generator>Hugo</generator><language>ja-jp</language><copyright>&amp;copy; 2021 Mei Akizuru. All rights reserved.</copyright><lastBuildDate>Tue, 16 Jul 2024 21:50:00 +0900</lastBuildDate><atom:link href="https://aquarite.info/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Raspberry Pi 5 w/ Argon ONE V3 &amp; NVMe SSD</title><link>https://aquarite.info/blog/2024/07/rpi5-argon-one-v3-nvme-ssd/</link><pubDate>Tue, 16 Jul 2024 21:50:00 +0900</pubDate><guid>https://aquarite.info/blog/2024/07/rpi5-argon-one-v3-nvme-ssd/</guid><description>概要 Raspberry Pi 5が（3月くらいに）届いてたので適当にセットアップした記録。——を書いて力尽きていたのを7月に入って続きを書き始めた記事です。 同じような記事は山ほどあるだろうけど……。 買ったもの Raspberry Pi 5 8GB: KSYで購入 Raspberry Pi 5用公式ケース（黒）: 同上 SanDisk Ultra 128GB (microSD): 秋葉原のあきばお〜で購入 Argon ONE V3 M.2 NVME PCIE</description></item><item><title>Stable DiffusionをUbuntu 22.04, Radeon RX 6600 XTで動かす</title><link>https://aquarite.info/blog/2023/04/stable-diffusion-on-lilnux-with-radeon/</link><pubDate>Sat, 22 Apr 2023 13:01:50 +0900</pubDate><guid>https://aquarite.info/blog/2023/04/stable-diffusion-on-lilnux-with-radeon/</guid><description>背景 ミドルレンジとはいえせっかくディスクリートのGPU積んでるのに何もしてない（ゲームはしてる）のはもったいない、ということでひとつ試しにStable Diffusionを動かしてみることにした。 環境 CPU Intel Core i5-12600KF (6+4C/16T) メモリ crucial DDR4-3200 32GB (16GBx2) GPU Radeon RX 6600 XT (ASRock AMD Radeon RX 6600 XT Challenger D 8GB OC) SSD WD My Passport 1TB ソフトウェア類は以</description></item><item><title>Keychron K8 ProのキースイッチをDurock T1 Shrimpに交換した</title><link>https://aquarite.info/blog/2023/01/k8-pro-durock-t1-shrimp/</link><pubDate>Mon, 16 Jan 2023 00:21:26 +0900</pubDate><guid>https://aquarite.info/blog/2023/01/k8-pro-durock-t1-shrimp/</guid><description>背景 去年の9月からKeychron K8 Proを使っています。スイッチはGateron G Pro 赤軸を選びました。ここで始めて赤軸を使ったのですが、「悪くないんだけどやっぱり自分はクリッキーかタクタイルだな」と思ってスイッチを探し、今回はDurock T1 Shrimpを選びました。元々青軸大好</description></item><item><title>Raspberry PiでKubernetesクラスタを組む（その2: サーバー監視編）</title><link>https://aquarite.info/blog/2022/07/rpi-cluster-02/</link><pubDate>Sat, 02 Jul 2022 21:45:19 +0900</pubDate><guid>https://aquarite.info/blog/2022/07/rpi-cluster-02/</guid><description>監視体制の準備 サーバー運用といえばまず監視である（？）。Kubernetesクラスタを立ち上げる前に、まずRaspberry Piの監視体制を組んでみることにした。 構成については『ラズパイk8s用の監視システム(Node Exporter + Prometheus + InfluxDB + Grafana)』を参考にした。ダッシュボードはイ</description></item><item><title>Raspberry PiでKubernetesクラスタを組む（その1: 物理・OS編）</title><link>https://aquarite.info/blog/2022/03/rpi-cluster-01/</link><pubDate>Thu, 31 Mar 2022 20:49:51 +0900</pubDate><guid>https://aquarite.info/blog/2022/03/rpi-cluster-01/</guid><description>背景 Kubernetesがイケイケの技術と言われてから早数年が経ち、とりあえずコンテナ乗っけとけみたいな感覚でアプリが船の上に乗せられる時代になったが、業務では社内で提供されるPaaSか、諸々の要件の問題で昔ながらの仮想マシンを使うことがほとんどだった。このままではk8sのkの字</description></item><item><title>Octopress -> Hugoお引っ越し記録</title><link>https://aquarite.info/blog/2022/01/octopress-hugo-migration/</link><pubDate>Sat, 15 Jan 2022 20:23:00 +0900</pubDate><guid>https://aquarite.info/blog/2022/01/octopress-hugo-migration/</guid><description>前の記事で引っ越し記録を書くと言って結局4ヶ月ほど放置してしまったけど一応記録。 背景 元々 tech.aquarite.info はOctopressで生成したものをGitHub Pagesに乗っけていて、 aquarite.info は手書きのHTMLを契約しているVPSでホストしていた。まず手書きで全部管理するのが超絶しんどい、ぶっちゃけ分ける</description></item><item><title>SpresenseとBP35A1でスマートメーターと通信する</title><link>https://aquarite.info/blog/2022/01/spresense-broute/</link><pubDate>Sat, 08 Jan 2022 02:40:00 +0900</pubDate><guid>https://aquarite.info/blog/2022/01/spresense-broute/</guid><description>背景 結構前にスマートメーターに切り替わり、このタイミングで電力消費量なんかを取れないかと調べてみてBルートサービスなるものがあることを知った。 スマートメーターとWi-SUNなる規格で通信して情報を取得できるが、このモジュールがなかなか高価で尻込みしていた。しかし、最近どうもブレー</description></item><item><title>OctopressからHugoへの切り替えついでにサイト整理しました</title><link>https://aquarite.info/blog/2021/09/site-migration/</link><pubDate>Sun, 26 Sep 2021 03:22:39 +0900</pubDate><guid>https://aquarite.info/blog/2021/09/site-migration/</guid><description>最終更新は6年前と完全放置だった tech.aquarite.info ですが、Octopressもすっかり動きがなくなってしまったので、いい機会だと思いHugoに切り替えました。何がいい機会なのかは自分でもよく分かりませんが、urandomの方でも使っているので多少は慣れたツールであるというのが選定理由です。 それと</description></item><item><title>DatabaseRewinder with Rails 4.2 &amp; PostgreSQL</title><link>https://aquarite.info/blog/2015/03/database-rewinder-with-rails-4-2/</link><pubDate>Thu, 12 Mar 2015 18:49:02 +0900</pubDate><guid>https://aquarite.info/blog/2015/03/database-rewinder-with-rails-4-2/</guid><description>Rails 4.2で新規プロジェクトを作ってPostgreSQLを使ったときにDatabaseRewinderが使えなかった話。私が使っていたのがDatabaseRewinderだったという話でたぶんDatabaseCleanerでも同じ現象は起こると思う。というかdisable_refe</description></item><item><title>SECCON 2014 Online Qualification (December) write-up</title><link>https://aquarite.info/blog/2014/12/seccon2014-online-winter/</link><pubDate>Sun, 07 Dec 2014 22:11:39 +0900</pubDate><guid>https://aquarite.info/blog/2014/12/seccon2014-online-winter/</guid><description>Welcome to SECCON (Start 100) The answer is &amp;ldquo;SECCON{20141206}&amp;rdquo;. 答えは、「SECCON{20141206}」です。 驚くべきことに問題ページに答えが書かれている。なんと楽な問題なのだろう。 Answer: SECCON{20141206} jspuzzle (Web 100) jspuzzle.zip You need to fill in all blanks! jspuzzle.zipを展開するとq.htmlとsha1.jsがある。sha1.jsはJavaScriptでSH</description></item><item><title>tkbctf4 [misc 400] amida</title><link>https://aquarite.info/blog/2014/11/tkbctf4-amida/</link><pubDate>Mon, 24 Nov 2014 06:11:50 +0900</pubDate><guid>https://aquarite.info/blog/2014/11/tkbctf4-amida/</guid><description>Cheer of CPUに続きましてmisc 400、amidaでございます。 この問題は私と@yuscarletによる作成です。 問題 203.178.132.117:42719 Ghost Leg - Wikipedia, the free encyclopedia 現在問題文中のサーバーは停止しています。こちらもソースコードはgithubで公開されていますので、試したい方はどうぞ。tkbctf4/misc400</description></item><item><title>tkbctf4 [bin300] Cheer of CPU</title><link>https://aquarite.info/blog/2014/11/tkbctf4-cheerofcpu/</link><pubDate>Mon, 24 Nov 2014 04:16:38 +0900</pubDate><guid>https://aquarite.info/blog/2014/11/tkbctf4-cheerofcpu/</guid><description>tkbctf4が終了してからずいぶんと時間が経ちましたが皆様いかがお過ごしでしょうか。今更ではありますが[bin300] Cheer of CPUの解説というか、そんなようなものを書いてみようかと。 なお、問題のソースコードと配布されたバイナリはtkbctfのgithubリポジトリにあるので、そち</description></item><item><title>YosemiteでSublime Text 3 + LaTeXToolsを使ったらPDF出てこない話</title><link>https://aquarite.info/blog/2014/10/sublime-latex-yosemite/</link><pubDate>Fri, 17 Oct 2014 17:56:46 +0900</pubDate><guid>https://aquarite.info/blog/2014/10/sublime-latex-yosemite/</guid><description>覚え書き。 今日公開されたMac OS X Yosemite (10.10)に早速更新したところ、Sublime Text 3 + LaTeXToolsの環境でLaTeXをビルドしてもPDFが出力されなくなった。 この問題はYosemiteがbetaの時点でアップグレードして報告した猛者がいた。LaTeXTools on OS X</description></item><item><title>CSAW CTF 2014 Quals Forensics</title><link>https://aquarite.info/blog/2014/09/csawctf2014-forensics/</link><pubDate>Tue, 23 Sep 2014 03:07:38 +0900</pubDate><guid>https://aquarite.info/blog/2014/09/csawctf2014-forensics/</guid><description>CSAW CTF 2014 Quals、Forensicsのwrite-upです。私が解いたのはForensicsの4問中、200点のObscurityを除いた3問です。 [100] dumpster diving 問題文 dumpsters are cool, but cores are cooler Written by marc firefox.mem.zip 解答 Answer: cd69b4957f06cd818d7bf3d61980e291 与えられるのは&amp;rsquo;firefox.mem.zip&amp;rsquo;で、コアダンプです</description></item><item><title>CSAW CTF 2014 Quals Trivia</title><link>https://aquarite.info/blog/2014/09/csawctf2014-trivia/</link><pubDate>Mon, 22 Sep 2014 20:18:08 +0900</pubDate><guid>https://aquarite.info/blog/2014/09/csawctf2014-trivia/</guid><description>CSAW CTF 2014 Qualsに参加してました。日本時間で20日07:00から22日07:00までの48時間。都内某所に泊まり込みでした。そんな感じでWrite-upでございます。この記事はTrivia。 Triviaは全て10点で全6問。うち私が解答したのは3問でした。 Shameless plug 問題文 This is the name of the new</description></item><item><title>SECCON 2014 オンライン予選 その他諸々</title><link>https://aquarite.info/blog/2014/07/seccon2014-online-preliminary/</link><pubDate>Sun, 20 Jul 2014 19:24:34 +0900</pubDate><guid>https://aquarite.info/blog/2014/07/seccon2014-online-preliminary/</guid><description>2014-07-19 09:00 - 21:00に行われたSECCON 2014 オンライン予選について、その他諸々。 個別に書いたのは次の2つ。 あみだくじ Print it この2つとここで書かれていないのは問題見てすらいません˙꒳˙ decode me ダウンロードしたencoded.txtを見ると盛大に文字化けしてるんだけど、FRPPBA 2014とい</description></item><item><title>SECCON 2014 オンライン予選 【Print it!】</title><link>https://aquarite.info/blog/2014/07/seccon2014-online-printit/</link><pubDate>Sun, 20 Jul 2014 18:53:55 +0900</pubDate><guid>https://aquarite.info/blog/2014/07/seccon2014-online-printit/</guid><description>2014-07-19 09:00 - 21:00に行われたSECCON 2014 オンライン予選のWrite-upです。次は「Print it!」。 問題概要 謎のファイルが降ってきます。以上。 解法 降ってきたファイルの正体は&amp;quot;Standard Triangulated Language&amp;quot;というフォーマットのファイル(参考: Wikip</description></item><item><title>SECCON 2014 オンライン予選 【あみだくじ】</title><link>https://aquarite.info/blog/2014/07/seccon2014-online-amida/</link><pubDate>Sun, 20 Jul 2014 00:29:19 +0900</pubDate><guid>https://aquarite.info/blog/2014/07/seccon2014-online-amida/</guid><description>2014-07-19 09:00 - 21:00に行われたSECCON 2014 オンライン予選のWrite-upです。今回は「あみだくじ」。 問題概要 問題は64bit ELF形式の実行ファイルamida。これを実行すると「No.i」(i = 1, 2, &amp;hellip;)と書かれた行に続けて1から順に番号が振られたあみだくじが表示され</description></item><item><title>miocatのその後、あるいはcoinsLT #0で発表した話</title><link>https://aquarite.info/blog/2014/06/miocat-at-coinslt0/</link><pubDate>Fri, 20 Jun 2014 11:09:26 +0900</pubDate><guid>https://aquarite.info/blog/2014/06/miocat-at-coinslt0/</guid><description>情報科学類1年が企画したcoinsLT #0（ATNDの方が情報量が多いのだが、一応Webページも存在している）で発表した。タイトルがクソ長いが要するにこのブログでいくつか投稿してきた、.NET FrameworkとMonoにおけるGetFullPathとかnew Uriの挙動の違いに</description></item><item><title>Railsアプリ with Mina and OpenRC</title><link>https://aquarite.info/blog/2014/05/rails-app-with-mina/</link><pubDate>Wed, 28 May 2014 00:07:56 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/rails-app-with-mina/</guid><description>目的とか KONMAIが送る大人気リズムアクションゲーム&amp;quot;REFLEC BEAT groovin&amp;rsquo;!!&amp;ldquo;に向けてRefixativeの新バージョンを書いていた。今までは毎回毎回サーバーにsshしてはgit pullしてうんぬんかんぬん、とやっていたので、現代的</description></item><item><title>Different Behaviors of DownloadString and Uri between .NET and Mono</title><link>https://aquarite.info/blog/2014/05/different-behaviors-of-downloadstring-and-uri-between-net-and-mono/</link><pubDate>Thu, 08 May 2014 07:43:38 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/different-behaviors-of-downloadstring-and-uri-between-net-and-mono/</guid><description>Note: This is the summary of my posts (they are written in Japanese): tkbctf3 Miocat MonoのWebClientにおけるURI 結局Monoと.NETの挙動の違いはなんだったのか I already reported this as a bug for Xamarin&amp;rsquo;s Bugzilla. Introduction I found the different behavior of WebClient.DownloadString(String) between Mono and .NET Framework when an invalid URI passed to it. In the Mono&amp;rsquo;s implementation, it may cause a security issue. This causes by two different behaviors, in new Uri(String), and Path.GetFullPath(String). DownloadString DownloadString(String) and some methods (e.g. DownloadFile(String), OpenRead(String), etc.) calls CreateUri(String), a private method of WebClient. (-&amp;gt; source code on github) CreateUri and GetUri CreateUri(String) tries to make</description></item><item><title>結局Monoと.NETの挙動の違いはなんだったのか</title><link>https://aquarite.info/blog/2014/05/download-string-in-mono-and-dotnet-framework/</link><pubDate>Thu, 08 May 2014 06:49:41 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/download-string-in-mono-and-dotnet-framework/</guid><description>続・アレな文字をWebClient.DownloadString(String)に渡すとローカルのファイルが読める ここ2つの記事でMonoのWebClient.DownloadString(string)にアレな文字列渡すとローカルファイルを落としてきてしまうという挙動について調</description></item><item><title>MonoのWebClientにおけるURI</title><link>https://aquarite.info/blog/2014/05/uri-parsing-in-webclient/</link><pubDate>Wed, 07 May 2014 13:33:03 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/uri-parsing-in-webclient/</guid><description>発端 発端は前の記事にあるように、tkbctf3の問題としてmiocatなるものを出してみたのはいいものの、意図とは異なる脆弱性を作り込んで250点問題が超絶ボーナス問題になりましたよ、というお話しです。 調査 miocatはC#で書かれており、実際の運用ではMonoランタイムで動いて</description></item><item><title>tkbctf3 miocat</title><link>https://aquarite.info/blog/2014/05/tkbctf3-miocat/</link><pubDate>Wed, 07 May 2014 13:26:00 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/tkbctf3-miocat/</guid><description>miocat（みお・きゃっと）はとある伝説の脱ヲタエンジニアが書き上げた伝説のプログラムに着想を得てっていうのはどうでもいいとして、実際のところは.NET Frameworkのとある仕様に関する問題です。でした。以下本来の意図の説明です。 ソースコード と、その前に。今回のソースコード</description></item><item><title>MacのSublime Text 3でもclang使って整形とか補完とかしたい</title><link>https://aquarite.info/blog/2014/02/clang-format-on-mac/</link><pubDate>Thu, 06 Feb 2014 08:56:44 +0900</pubDate><guid>https://aquarite.info/blog/2014/02/clang-format-on-mac/</guid><description>clang-formatによるコード整形 MacのCommand Line Toolsにはclang-formatがない。clang-formatというのはその名前の通り、ソースコードをclangに静的解析させて自動で整形しようというツール。 対応しているコーディングスタイルは次の5つ。 LLVM Google Chromium</description></item><item><title>RailsAdminの日時選択が日本語でバグる</title><link>https://aquarite.info/blog/2014/01/rails-admin-jp-problem/</link><pubDate>Thu, 23 Jan 2014 20:08:42 +0900</pubDate><guid>https://aquarite.info/blog/2014/01/rails-admin-jp-problem/</guid><description>概略 Rails Adminでdatetime型（日時）のカラムを含むモデルを操作する際、ロケールが日本語で、かつsvenfuchs/rails-i18nのファイルをそのまま使っていると例外ArgumentError(argument out of range)で死ぬ。 原因 そもそも内部で使ってるDate</description></item><item><title>ハロウフォゴットンワールド</title><link>https://aquarite.info/blog/2014/01/hello/</link><pubDate>Thu, 23 Jan 2014 07:20:02 +0900</pubDate><guid>https://aquarite.info/blog/2014/01/hello/</guid><description>よく見たらHello, World!だった。</description></item></channel></rss>