<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hello, (forgotten) world ☂</title><link>https://aquarite.info/posts/</link><description>Recent content in Posts on Hello, (forgotten) world ☂</description><generator>Hugo</generator><language>ja-jp</language><copyright>&amp;copy; 2021 Mei Akizuru. All rights reserved.</copyright><lastBuildDate>Fri, 21 Mar 2025 01:02:32 +0900</lastBuildDate><atom:link href="https://aquarite.info/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>新しいサーバーを組んだ</title><link>https://aquarite.info/blog/2025/03/build-new-server/</link><pubDate>Fri, 21 Mar 2025 01:02:32 +0900</pubDate><guid>https://aquarite.info/blog/2025/03/build-new-server/</guid><description>&lt;h2 id="経緯">経緯&lt;/h2>
&lt;p>ただurandomの面々と飯を食った後にフラッと秋葉原のヨドバシに寄ったところ、そこにRyzen 7 9800X3Dが置いてあったのが全ての発端でした。&lt;/p>
&lt;p>どこにもないと言われつつなんか普通にポンと置かれていて、うわ、どうしよ、いやでも椅子が欲しいしな……などと悩んでその場は買わずに帰ったんですが、翌日「いややっぱ欲しいな」と思い、あともうそこで行ってなければ諦めがつくと思って行ってみたらまだあったんですね。即座に店員さんに声を掛けて購入しました。その後秋葉原のパーツショップを一巡りしてマザーやメモリを調達して帰宅しました（ちなみに後日やっぱSSDも折角だしアップグレードしよ、と思ってSN850XとSN7100を購入）。&lt;/p></description></item><item><title>2024年のまとめ（？）</title><link>https://aquarite.info/blog/2024/12/2024-wrapup/</link><pubDate>Tue, 31 Dec 2024 22:01:42 +0900</pubDate><guid>https://aquarite.info/blog/2024/12/2024-wrapup/</guid><description>&lt;p>まとめる程のこともそんなないんですが、なんか書いとけ的なノリでちょっと振り返って書いてみます。&lt;/p>
&lt;h2 id="urandom">urandom&lt;/h2>
&lt;p>例によってCTFはSECCONにしか出てないです（urandomとしては）。SECCON CTFがQRコードを煮たり焼いたりする（※煮てはない、多分）インターネットクイズ大会だったのも今は昔、すっかりガチのCTFになって久しいですが、そうなってくると普段から真面目に取り組んでないとまぁ解けないですね。昨今はとりあえずChatGPTなりなんなりに放り投げたら何とかなるという風潮もありますが、何もわからんままLLMにぶん投げても何もわからん回答が返ってくるだけなので依然として人間側がきちんと理解する必要があります。毎度のことながら、些細な違和感だったり、題意を何となく察したりみたいなとこは案外行けてて、問題はそこから正解に持ち込むだけの知識量とか気合いなような気がします。&lt;/p></description></item><item><title>Raspberry Pi 5 w/ Argon ONE V3 &amp; NVMe SSD</title><link>https://aquarite.info/blog/2024/07/rpi5-argon-one-v3-nvme-ssd/</link><pubDate>Tue, 16 Jul 2024 21:50:00 +0900</pubDate><guid>https://aquarite.info/blog/2024/07/rpi5-argon-one-v3-nvme-ssd/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>Raspberry Pi 5が（3月くらいに）届いてたので適当にセットアップした記録。——を書いて力尽きていたのを7月に入って続きを書き始めた記事です。&lt;/p>
&lt;p>同じような記事は山ほどあるだろうけど……。&lt;/p>
&lt;h2 id="買ったもの">買ったもの&lt;/h2>
&lt;ul>
&lt;li>Raspberry Pi 5 8GB: &lt;a href="https://raspberry-pi.ksyic.com/main/index">KSY&lt;/a>で購入&lt;/li>
&lt;li>Raspberry Pi 5用公式ケース（黒）: 同上&lt;/li>
&lt;li>SanDisk Ultra 128GB (microSD): 秋葉原のあきばお〜で購入&lt;/li>
&lt;li>&lt;a href="https://argon40.com/products/argon-one-v3-m-2-nvme-case">Argon ONE V3 M.2 NVME PCIE Case&lt;/a>: ほったらかしてる間に千石電商で取り扱いが始まってたので買ってみた&lt;/li>
&lt;li>Western Digital WD Blue SN580 1TB: いつだかの東京都のQRコード決済キャンペーンの時に駆け込みで買ったSSD&lt;/li>
&lt;/ul>
&lt;p>今回買ったものではありませんが、電源は5V4Aを供給できる&lt;a href="https://www.sengoku.co.jp/mod/sgk_cart/detail.php?code=EEHD-5RTU">TSI-PI046-5V4A&lt;/a>を（Raspberry Pi 4から使い回して）使用しています。&lt;/p></description></item><item><title>Stable DiffusionをUbuntu 22.04, Radeon RX 6600 XTで動かす</title><link>https://aquarite.info/blog/2023/04/stable-diffusion-on-lilnux-with-radeon/</link><pubDate>Sat, 22 Apr 2023 13:01:50 +0900</pubDate><guid>https://aquarite.info/blog/2023/04/stable-diffusion-on-lilnux-with-radeon/</guid><description>&lt;h2 id="背景">背景&lt;/h2>
&lt;p>ミドルレンジとはいえせっかくディスクリートのGPU積んでるのに何もしてない（ゲームはしてる）のはもったいない、ということでひとつ試しにStable Diffusionを動かしてみることにした。&lt;/p>
&lt;h2 id="環境">環境&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>CPU&lt;/strong>&lt;/td>
 &lt;td>Intel Core i5-12600KF (6+4C/16T)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>メモリ&lt;/strong>&lt;/td>
 &lt;td>crucial DDR4-3200 32GB (16GBx2)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>GPU&lt;/strong>&lt;/td>
 &lt;td>Radeon RX 6600 XT (ASRock AMD Radeon RX 6600 XT Challenger D 8GB OC)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>SSD&lt;/strong>&lt;/td>
 &lt;td>WD My Passport 1TB&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>ソフトウェア類は以下の通り。&lt;/p></description></item><item><title>Keychron K8 ProのキースイッチをDurock T1 Shrimpに交換した</title><link>https://aquarite.info/blog/2023/01/k8-pro-durock-t1-shrimp/</link><pubDate>Mon, 16 Jan 2023 00:21:26 +0900</pubDate><guid>https://aquarite.info/blog/2023/01/k8-pro-durock-t1-shrimp/</guid><description>&lt;h2 id="背景">背景&lt;/h2>
&lt;p>去年の9月から&lt;a href="https://keychron.jp/products/keychron-k8-pro-qmk-via-wireless-mechanical-keyboard?variant=41918199365803">Keychron K8 Pro&lt;/a>を使っています。スイッチはGateron G Pro 赤軸を選びました。ここで始めて赤軸を使ったのですが、「悪くないんだけどやっぱり自分はクリッキーかタクタイルだな」と思ってスイッチを探し、今回は&lt;a href="https://shop.yushakobo.jp/products/4649?variant=43877009129703">Durock T1 Shrimp&lt;/a>を選びました。元々青軸大好きマンなんですが、音の問題があって今回はタクタイルを選択しました。スイッチは遊舎工房さんのオンラインショップで購入しました。K8 Proは87キーなので、35個入りを3つで合計105個、送料抜きで10,395円（99円/個）でした。なお、これを書いている時点で完売となっています。&lt;/p></description></item><item><title>Raspberry PiでKubernetesクラスタを組む（その2: サーバー監視編）</title><link>https://aquarite.info/blog/2022/07/rpi-cluster-02/</link><pubDate>Sat, 02 Jul 2022 21:45:19 +0900</pubDate><guid>https://aquarite.info/blog/2022/07/rpi-cluster-02/</guid><description>&lt;h2 id="監視体制の準備">監視体制の準備&lt;/h2>
&lt;p>サーバー運用といえばまず監視である（？）。Kubernetesクラスタを立ち上げる前に、まずRaspberry Piの監視体制を組んでみることにした。&lt;/p>
&lt;p>構成については『&lt;a href="https://qiita.com/reireias/items/40af82cbcd6fc92ad44e">ラズパイk8s用の監視システム(Node Exporter + Prometheus + InfluxDB + Grafana)&lt;/a>』を参考にした。ダッシュボードはインターネットからアクセスしたいが、インターネットからLANへのアクセスは可能な限りしたくないということで、InfluxDBとGrafanaは元から契約していたVPS上に構築することにした。&lt;/p></description></item><item><title>Raspberry PiでKubernetesクラスタを組む（その1: 物理・OS編）</title><link>https://aquarite.info/blog/2022/03/rpi-cluster-01/</link><pubDate>Thu, 31 Mar 2022 20:49:51 +0900</pubDate><guid>https://aquarite.info/blog/2022/03/rpi-cluster-01/</guid><description>&lt;h2 id="背景">背景&lt;/h2>
&lt;p>Kubernetesがイケイケの技術と言われてから早数年が経ち、とりあえずコンテナ乗っけとけみたいな感覚でアプリが船の上に乗せられる時代になったが、業務では社内で提供されるPaaSか、諸々の要件の問題で昔ながらの仮想マシンを使うことがほとんどだった。このままではk8sのkの字も分からないまま死んでしまうという危惧を抱き、自前で組んでみることにした。&lt;/p></description></item><item><title>Octopress -> Hugoお引っ越し記録</title><link>https://aquarite.info/blog/2022/01/octopress-hugo-migration/</link><pubDate>Sat, 15 Jan 2022 20:23:00 +0900</pubDate><guid>https://aquarite.info/blog/2022/01/octopress-hugo-migration/</guid><description>&lt;p>&lt;a href="https://aquarite.info/blog/2021/09/site-migration/">前の記事&lt;/a>で引っ越し記録を書くと言って結局4ヶ月ほど放置してしまったけど一応記録。&lt;/p>
&lt;h2 id="背景">背景&lt;/h2>
&lt;p>元々 &lt;code>tech.aquarite.info&lt;/code> はOctopressで生成したものをGitHub Pagesに乗っけていて、 &lt;code>aquarite.info&lt;/code> は手書きのHTMLを契約しているVPSでホストしていた。まず手書きで全部管理するのが超絶しんどい、ぶっちゃけ分ける理由があんまりない、などの理由でこれらを統合することにした。
これと同時に、Octopressはとうに更新が止まっていること、Octopressのリポジトリをcloneしてきてそこに手を加えるスタイルがやっぱり気持ち悪いといった理由でOctopressから別のstatic site generatorに移ろうと考えていた。で、色々と調べてみたがHugoにした。&lt;/p></description></item><item><title>SpresenseとBP35A1でスマートメーターと通信する</title><link>https://aquarite.info/blog/2022/01/spresense-broute/</link><pubDate>Sat, 08 Jan 2022 02:40:00 +0900</pubDate><guid>https://aquarite.info/blog/2022/01/spresense-broute/</guid><description>&lt;h2 id="背景">背景&lt;/h2>
&lt;p>結構前にスマートメーターに切り替わり、このタイミングで電力消費量なんかを取れないかと調べてみてBルートサービスなるものがあることを知った。&lt;/p>
&lt;p>スマートメーターとWi-SUNなる規格で通信して情報を取得できるが、このモジュールがなかなか高価で尻込みしていた。しかし、最近どうもブレーカーが落ちる頻度が上がってきた感じがあったので、電力使用量をモニタリングしてみようと思ったものである。&lt;/p></description></item><item><title>OctopressからHugoへの切り替えついでにサイト整理しました</title><link>https://aquarite.info/blog/2021/09/site-migration/</link><pubDate>Sun, 26 Sep 2021 03:22:39 +0900</pubDate><guid>https://aquarite.info/blog/2021/09/site-migration/</guid><description>&lt;p>最終更新は6年前と完全放置だった &lt;code>tech.aquarite.info&lt;/code> ですが、Octopressもすっかり動きがなくなってしまったので、いい機会だと思いHugoに切り替えました。何がいい機会なのかは自分でもよく分かりませんが、urandomの方でも使っているので多少は慣れたツールであるというのが選定理由です。&lt;/p>
&lt;p>それと同時に &lt;code>aquarite.info&lt;/code> で公開していた殺風景なプロフィールページ（的なもの）も特に書くことないのにドメイン占有してるのもな、と思ってブログと統一することにしました。あの辺に書いてあった内容は&lt;a href="https://aquarite.info/about/">About&lt;/a>に書いてあります、たぶん。あのページはあのページで古式ゆかしい手書きのHTMLで、Static Site Generatorでは感じられない人の温もりみたいなものがあったとは思うのですが、シンプルに面倒なので。そもそも人の温もりも何もキーボードでタイプしとるだけやろがい、という話です。&lt;/p></description></item><item><title>DatabaseRewinder with Rails 4.2 &amp; PostgreSQL</title><link>https://aquarite.info/blog/2015/03/database-rewinder-with-rails-4-2/</link><pubDate>Thu, 12 Mar 2015 18:49:02 +0900</pubDate><guid>https://aquarite.info/blog/2015/03/database-rewinder-with-rails-4-2/</guid><description>&lt;p>Rails 4.2で新規プロジェクトを作ってPostgreSQLを使ったときにDatabaseRewinderが使えなかった話。私が使っていたのがDatabaseRewinderだったという話でたぶんDatabaseCleanerでも同じ現象は起こると思う。というか&lt;code>disable_referential_integrity&lt;/code>を使っている限り起こると思う。&lt;/p></description></item><item><title>SECCON 2014 Online Qualification (December) write-up</title><link>https://aquarite.info/blog/2014/12/seccon2014-online-winter/</link><pubDate>Sun, 07 Dec 2014 22:11:39 +0900</pubDate><guid>https://aquarite.info/blog/2014/12/seccon2014-online-winter/</guid><description>&lt;h1 id="welcome-to-seccon-start-100">Welcome to SECCON (Start 100)&lt;/h1>
&lt;blockquote>
&lt;p>The answer is &amp;ldquo;SECCON{20141206}&amp;rdquo;.&lt;/p>
&lt;p>答えは、「SECCON{20141206}」です。&lt;/p>&lt;/blockquote>
&lt;p>驚くべきことに問題ページに答えが書かれている。なんと楽な問題なのだろう。&lt;/p>
&lt;p>Answer: &lt;code>SECCON{20141206}&lt;/code>&lt;/p>
&lt;h1 id="jspuzzle-web-100">jspuzzle (Web 100)&lt;/h1>
&lt;blockquote>
&lt;p>jspuzzle.zip&lt;/p>
&lt;p>You need to fill in all blanks!&lt;/p>&lt;/blockquote>
&lt;p>&lt;code>jspuzzle.zip&lt;/code>を展開すると&lt;code>q.html&lt;/code>と&lt;code>sha1.js&lt;/code>がある。&lt;code>sha1.js&lt;/code>はJavaScriptでSHA-1のハッシュ値を計算するライブラリの模様。本体は&lt;code>q.html&lt;/code>。&lt;/p></description></item><item><title>tkbctf4 [misc 400] amida</title><link>https://aquarite.info/blog/2014/11/tkbctf4-amida/</link><pubDate>Mon, 24 Nov 2014 06:11:50 +0900</pubDate><guid>https://aquarite.info/blog/2014/11/tkbctf4-amida/</guid><description>&lt;p>&lt;a href="https://aquarite.info/blog/2014/11/24/tkbctf4-cheerofcpu/">Cheer of CPU&lt;/a>に続きましてmisc 400、amidaでございます。&lt;/p>
&lt;p>この問題は私と@yuscarletによる作成です。&lt;/p>
&lt;h1 id="問題">問題&lt;/h1>
&lt;blockquote>
&lt;p>&lt;code>203.178.132.117:42719&lt;/code>&lt;/p>
&lt;p>&lt;a href="http://en.wikipedia.org/wiki/Ghost_Leg">Ghost Leg - Wikipedia, the free encyclopedia&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>現在問題文中のサーバーは停止しています。こちらもソースコードはgithubで公開されていますので、試したい方はどうぞ。&lt;a href="https://github.com/tkbctf/tkbctf4/tree/master/misc400_amida">tkbctf4/misc400_amida at master · tkbctf/tkbctf4&lt;/a>&lt;/p>
&lt;p>なお実際の問題は&lt;a href="https://github.com/mayth/fafrotskies">fafrotskies&lt;/a>というCPUを100%持っていく素敵な自作サーバーと連携して動作していました。&lt;/p>
&lt;p>問題中に英語版Wikipediaの&amp;quot;Ghost Leg&amp;quot;の記事にリンクが張ってありますが、「あみだくじ」って英語では&amp;quot;Ghost Leg&amp;quot;というそうです。&lt;/p></description></item><item><title>tkbctf4 [bin300] Cheer of CPU</title><link>https://aquarite.info/blog/2014/11/tkbctf4-cheerofcpu/</link><pubDate>Mon, 24 Nov 2014 04:16:38 +0900</pubDate><guid>https://aquarite.info/blog/2014/11/tkbctf4-cheerofcpu/</guid><description>&lt;p>tkbctf4が終了してからずいぶんと時間が経ちましたが皆様いかがお過ごしでしょうか。今更ではありますが[bin300] Cheer of CPUの解説というか、そんなようなものを書いてみようかと。&lt;/p>
&lt;p>なお、問題のソースコードと配布されたバイナリはtkbctfのgithubリポジトリにあるので、そちらもどうぞ。 &lt;a href="https://github.com/tkbctf/tkbctf4/tree/master/bin300_CheerOfCPU">tkbctf4/bin300_CheerOfCPU at master · tkbctf/tkbctf4&lt;/a>&lt;/p></description></item><item><title>YosemiteでSublime Text 3 + LaTeXToolsを使ったらPDF出てこない話</title><link>https://aquarite.info/blog/2014/10/sublime-latex-yosemite/</link><pubDate>Fri, 17 Oct 2014 17:56:46 +0900</pubDate><guid>https://aquarite.info/blog/2014/10/sublime-latex-yosemite/</guid><description>&lt;p>覚え書き。&lt;/p>
&lt;p>今日公開されたMac OS X Yosemite (10.10)に早速更新したところ、Sublime Text 3 + LaTeXToolsの環境でLaTeXをビルドしてもPDFが出力されなくなった。&lt;/p>
&lt;p>この問題はYosemiteがbetaの時点でアップグレードして報告した猛者がいた。&lt;a href="https://github.com/SublimeText/LaTeXTools/issues/401">LaTeXTools on OS X 10.10 · Issue #401 · SublimeText/LaTeXTools&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>opened this issue on 5 Jun&lt;/p></description></item><item><title>CSAW CTF 2014 Quals Forensics</title><link>https://aquarite.info/blog/2014/09/csawctf2014-forensics/</link><pubDate>Tue, 23 Sep 2014 03:07:38 +0900</pubDate><guid>https://aquarite.info/blog/2014/09/csawctf2014-forensics/</guid><description>&lt;p>CSAW CTF 2014 Quals、Forensicsのwrite-upです。私が解いたのはForensicsの4問中、200点のObscurityを除いた3問です。&lt;/p>
&lt;h1 id="100-dumpster-diving">[100] dumpster diving&lt;/h1>
&lt;h2 id="問題文">問題文&lt;/h2>
&lt;blockquote>
&lt;p>dumpsters are cool, but cores are cooler&lt;/p>
&lt;p>Written by marc&lt;/p>
&lt;p>firefox.mem.zip&lt;/p>&lt;/blockquote>
&lt;h2 id="解答">解答&lt;/h2>
&lt;p>Answer: cd69b4957f06cd818d7bf3d61980e291&lt;/p>
&lt;p>与えられるのは&amp;rsquo;firefox.mem.zip&amp;rsquo;で、コアダンプです。私が取りかかった時点で既に他のメンバーからbinwalkしてみたらSQLiteのなんかが見えていると報告がありました。Firefoxのコアダンプであれば何か見えててもおかしくないですね。&lt;/p></description></item><item><title>CSAW CTF 2014 Quals Trivia</title><link>https://aquarite.info/blog/2014/09/csawctf2014-trivia/</link><pubDate>Mon, 22 Sep 2014 20:18:08 +0900</pubDate><guid>https://aquarite.info/blog/2014/09/csawctf2014-trivia/</guid><description>&lt;p>CSAW CTF 2014 Qualsに参加してました。日本時間で20日07:00から22日07:00までの48時間。都内某所に泊まり込みでした。そんな感じでWrite-upでございます。この記事はTrivia。&lt;/p>
&lt;p>Triviaは全て10点で全6問。うち私が解答したのは3問でした。&lt;/p>
&lt;h1 id="shameless-plug">Shameless plug&lt;/h1>
&lt;h2 id="問題文">問題文&lt;/h2>
&lt;p>This is the name of the new USENIX workshop that featured papers on CTFs being used for education.&lt;/p></description></item><item><title>SECCON 2014 オンライン予選 その他諸々</title><link>https://aquarite.info/blog/2014/07/seccon2014-online-preliminary/</link><pubDate>Sun, 20 Jul 2014 19:24:34 +0900</pubDate><guid>https://aquarite.info/blog/2014/07/seccon2014-online-preliminary/</guid><description>&lt;p>2014-07-19 09:00 - 21:00に行われたSECCON 2014 オンライン予選について、その他諸々。&lt;/p>
&lt;p>個別に書いたのは次の2つ。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aquarite.info/blog/2014/07/20/seccon2014-online-amida/">あみだくじ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aquarite.info/blog/2014/07/20/seccon2014-online-printit/">Print it&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>この2つとここで書かれていないのは問題見てすらいません˙꒳˙&lt;/p>
&lt;h2 id="decode-me">decode me&lt;/h2>
&lt;p>ダウンロードした&lt;code>encoded.txt&lt;/code>を見ると盛大に文字化けしてるんだけど、&lt;code>FRPPBA 2014&lt;/code>という文字を見た瞬間にここが&lt;code>SECCON 2014&lt;/code>であることを確信。ということは換字式暗号か何かなんだろうけど、&lt;code>ebg13/47&lt;/code>という文字が気になる。とここで@re_Ordが「rot13/47というのがあるらしい」。なんじゃそりゃと思って調べてみると、rot13を拡張したそういう暗号があるらしかった。&lt;/p></description></item><item><title>SECCON 2014 オンライン予選 【Print it!】</title><link>https://aquarite.info/blog/2014/07/seccon2014-online-printit/</link><pubDate>Sun, 20 Jul 2014 18:53:55 +0900</pubDate><guid>https://aquarite.info/blog/2014/07/seccon2014-online-printit/</guid><description>&lt;p>2014-07-19 09:00 - 21:00に行われたSECCON 2014 オンライン予選のWrite-upです。次は「Print it!」。&lt;/p>
&lt;h2 id="問題概要">問題概要&lt;/h2>
&lt;p>謎のファイルが降ってきます。以上。&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;p>降ってきたファイルの正体は&amp;quot;Standard Triangulated Language&amp;quot;というフォーマットのファイル(参考: &lt;a href="http://ja.wikipedia.org/wiki/Standard_Triangulated_Language">Wikipedia&lt;/a>)で、このフォーマットのバイナリ形式で記録された3Dモデルです。このファイルを適切なアプリケーションで開くと3Dモデルを見ることが出来て、そのモデルにフラグが書かれています。&lt;/p>
&lt;p>ans: &lt;code>Bar1kaTaLab.&lt;/code>&lt;/p>
&lt;h2 id="経緯">経緯&lt;/h2>
&lt;p>とりあえずファイルをバイナリエディタに突っ込んでビットマップで見てみると、かなり規則性の高いらしいということはわかったのですが、それ以上のことはさっぱりわからず。nullが14個くらい続いてたりとか、それが繰り返されてたりとか、その辺の規則性が高いわりに、先頭には普通にテキストが入っているし、テキストの間にはまたもnullが入っていてよくわかんないなぁと思ってました。&lt;/p></description></item><item><title>SECCON 2014 オンライン予選 【あみだくじ】</title><link>https://aquarite.info/blog/2014/07/seccon2014-online-amida/</link><pubDate>Sun, 20 Jul 2014 00:29:19 +0900</pubDate><guid>https://aquarite.info/blog/2014/07/seccon2014-online-amida/</guid><description>&lt;p>2014-07-19 09:00 - 21:00に行われたSECCON 2014 オンライン予選のWrite-upです。今回は「あみだくじ」。&lt;/p>
&lt;h2 id="問題概要">問題概要&lt;/h2>
&lt;p>問題は64bit ELF形式の実行ファイル&lt;code>amida&lt;/code>。これを実行すると「No.i」(i = 1, 2, &amp;hellip;)と書かれた行に続けて1から順に番号が振られたあみだくじが表示され、いずれかの終端の1箇所に*印がついている。……が、後になると&lt;/p></description></item><item><title>miocatのその後、あるいはcoinsLT #0で発表した話</title><link>https://aquarite.info/blog/2014/06/miocat-at-coinslt0/</link><pubDate>Fri, 20 Jun 2014 11:09:26 +0900</pubDate><guid>https://aquarite.info/blog/2014/06/miocat-at-coinslt0/</guid><description>&lt;p>情報科学類1年が企画した&lt;a href="http://atnd.org/events/51236">coinsLT #0&lt;/a>（ATNDの方が情報量が多いのだが、一応&lt;a href="http://coinslt.org/zero.html">Webページ&lt;/a>も存在している）で発表した。タイトルがクソ長いが要するにこのブログでいくつか投稿してきた、.NET FrameworkとMonoにおけるGetFullPathとかnew Uriの挙動の違いについてである。&lt;/p>
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/39806085" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> &lt;/iframe> &lt;div style="margin-bottom:5px"> &lt;strong> &lt;a href="//www.slideshare.net/maytheplic/coinslt0-miocat" title="coinsLT#0 tkbctf3 miocatができるまで" target="_blank">coinsLT#0 tkbctf3 miocatができるまで&lt;/a> &lt;/strong> from &lt;strong>&lt;a href="//www.slideshare.net/maytheplic" target="_blank">Mei Akizuru&lt;/a>&lt;/strong> &lt;/div>
&lt;p>実際の発表時の動画も公開されている。だいたい07:58あたりからが私の発表である。&lt;/p></description></item><item><title>Railsアプリ with Mina and OpenRC</title><link>https://aquarite.info/blog/2014/05/rails-app-with-mina/</link><pubDate>Wed, 28 May 2014 00:07:56 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/rails-app-with-mina/</guid><description>&lt;h1 id="目的とか">目的とか&lt;/h1>
&lt;p>KONMAIが送る大人気リズムアクションゲーム&amp;quot;REFLEC BEAT groovin&amp;rsquo;!!&amp;ldquo;に向けてRefixativeの新バージョンを書いていた。今までは毎回毎回サーバーにsshしてはgit pullしてうんぬんかんぬん、とやっていたので、現代的な環境を構築したかった。&lt;/p></description></item><item><title>Different Behaviors of DownloadString and Uri between .NET and Mono</title><link>https://aquarite.info/blog/2014/05/different-behaviors-of-downloadstring-and-uri-between-net-and-mono/</link><pubDate>Thu, 08 May 2014 07:43:38 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/different-behaviors-of-downloadstring-and-uri-between-net-and-mono/</guid><description>&lt;p>Note: This is the summary of my posts (they are written in Japanese):&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://tech.aquarite.info/blog/2014/05/07/tkbctf3-miocat/">tkbctf3 Miocat&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tech.aquarite.info/blog/2014/05/07/uri-parsing-in-webclient/">MonoのWebClientにおけるURI&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tech.aquarite.info/blog/2014/05/08/download-string-in-mono-and-dotnet-framework/">結局Monoと.NETの挙動の違いはなんだったのか&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I already reported this as a bug for Xamarin&amp;rsquo;s Bugzilla.&lt;/p>
&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>I found the different behavior of &lt;code>WebClient.DownloadString(String)&lt;/code> between Mono and .NET Framework when an invalid URI passed to it. In the Mono&amp;rsquo;s implementation, it may cause a security issue.&lt;/p>
&lt;p>This causes by two different behaviors, in &lt;code>new Uri(String)&lt;/code>, and &lt;code>Path.GetFullPath(String)&lt;/code>.&lt;/p>
&lt;h1 id="downloadstring">DownloadString&lt;/h1>
&lt;p>&lt;code>DownloadString(String)&lt;/code> and some methods (e.g. &lt;code>DownloadFile(String)&lt;/code>, &lt;code>OpenRead(String)&lt;/code>, etc.) calls &lt;code>CreateUri(String)&lt;/code>, a private method of &lt;code>WebClient&lt;/code>. (-&amp;gt; &lt;a href="https://github.com/mono/mono/blob/master/mcs/class/System/System.Net/WebClient.cs#L798">source code on github&lt;/a>)&lt;/p>
&lt;h2 id="createuri-and-geturi">CreateUri and GetUri&lt;/h2>
&lt;p>&lt;code>CreateUri(String)&lt;/code> tries to make an instance of &lt;code>Uri&lt;/code> with &lt;code>new Uri(String)&lt;/code>. If an invalid URI passed, the constructor raises an exception. For example, &lt;code>new Uri(&amp;quot;http://../../../etc/passwd&amp;quot;)&lt;/code> will be failed because its hostname part (&lt;code>..&lt;/code>) is invalid. However, the failure will be ignored, and &lt;code>CreateUri(String)&lt;/code> returns &lt;code>new Uri(Path.GetFullPath(String))&lt;/code>. It means the local file address with the full path will be returned.&lt;/p></description></item><item><title>結局Monoと.NETの挙動の違いはなんだったのか</title><link>https://aquarite.info/blog/2014/05/download-string-in-mono-and-dotnet-framework/</link><pubDate>Thu, 08 May 2014 06:49:41 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/download-string-in-mono-and-dotnet-framework/</guid><description>&lt;p>続・アレな文字を&lt;code>WebClient.DownloadString(String)&lt;/code>に渡すとローカルのファイルが読める&lt;/p>
&lt;p>ここ2つの記事でMonoの&lt;code>WebClient.DownloadString(string)&lt;/code>にアレな文字列渡すとローカルファイルを落としてきてしまうという挙動について調べてたわけですが、よくよくスタックトレースを見てみると、.NET Frameworkでも&lt;code>GetUri&lt;/code>というメソッドを経由して&lt;code>Path.GetFullPath&lt;/code>が呼ばれていたことがわかりました。&lt;/p></description></item><item><title>MonoのWebClientにおけるURI</title><link>https://aquarite.info/blog/2014/05/uri-parsing-in-webclient/</link><pubDate>Wed, 07 May 2014 13:33:03 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/uri-parsing-in-webclient/</guid><description>&lt;h1 id="発端">発端&lt;/h1>
&lt;p>発端は&lt;a href="https://aquarite.info/blog/2014/05/07/tkbctf3-miocat/">前の記事&lt;/a>にあるように、tkbctf3の問題としてmiocatなるものを出してみたのはいいものの、意図とは異なる脆弱性を作り込んで250点問題が超絶ボーナス問題になりましたよ、というお話しです。&lt;/p>
&lt;h1 id="調査">調査&lt;/h1>
&lt;p>miocatはC#で書かれており、実際の運用ではMonoランタイムで動いていました。というわけでMonoのソースコードを読めば解決です。やったね。&lt;/p>
&lt;p>そういうわけでまずは&lt;code>WebClient&lt;/code>の実装を読んでみたのですが、怪しい箇所が一発で見つかりました。&lt;a href="https://github.com/mono/mono/blob/2d573ae1ceac1656f0293cca3736dcb10c28be38/mcs/class/System/System.Net/WebClient.cs#L798">WebClient.cs#798&lt;/a>、privateメソッドである&lt;code>CreateUri(string)&lt;/code>なるメソッドです。&lt;code>DownloadString(string)&lt;/code>は、その引数をこのメソッドに渡して&lt;code>DownloadData(Uri)&lt;/code>を呼び出します。&lt;/p>
&lt;p>&lt;code>try-catch&lt;/code>の中で渡されたアドレス（と、&lt;code>baseAddress&lt;/code>）を元に&lt;code>Uri&lt;/code>のインスタンスを作って&lt;code>CreateUri(Uri)&lt;/code>に渡していますが、ここで例外が発生すると&lt;code>return new Uri(Path.GetFullPath(address))&lt;/code>という恐怖のコードが走ります。&lt;/p></description></item><item><title>tkbctf3 miocat</title><link>https://aquarite.info/blog/2014/05/tkbctf3-miocat/</link><pubDate>Wed, 07 May 2014 13:26:00 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/tkbctf3-miocat/</guid><description>&lt;p>miocat（みお・きゃっと）はとある伝説の脱ヲタエンジニアが書き上げた伝説のプログラムに着想を得てっていうのはどうでもいいとして、実際のところは.NET Frameworkのとある仕様に関する問題です。&lt;strong>でした&lt;/strong>。以下本来の意図の説明です。&lt;/p>
&lt;h1 id="ソースコード">ソースコード&lt;/h1>
&lt;p>と、その前に。今回のソースコードは&lt;a href="https://github.com/tkbctf/archive">tkbctf/archive&lt;/a>に上げておきます。結構問題の核心以外の部分で苦労してたりしますがそれはそれということで。&lt;/p>
&lt;p>追記: 上げました -&amp;gt; &lt;a href="https://github.com/tkbctf/archive/tree/master/tkbctf3/web250_miocat">tkbctf/archive/tkbctf3/web250_miocat&lt;/a>&lt;/p></description></item><item><title>MacのSublime Text 3でもclang使って整形とか補完とかしたい</title><link>https://aquarite.info/blog/2014/02/clang-format-on-mac/</link><pubDate>Thu, 06 Feb 2014 08:56:44 +0900</pubDate><guid>https://aquarite.info/blog/2014/02/clang-format-on-mac/</guid><description>&lt;h1 id="clang-formatによるコード整形">clang-formatによるコード整形&lt;/h1>
&lt;p>MacのCommand Line Toolsには&lt;code>clang-format&lt;/code>がない。&lt;code>clang-format&lt;/code>というのはその名前の通り、ソースコードをclangに静的解析させて自動で整形しようというツール。&lt;/p>
&lt;p>対応しているコーディングスタイルは次の5つ。&lt;/p>
&lt;ul>
&lt;li>LLVM&lt;/li>
&lt;li>Google&lt;/li>
&lt;li>Chromium&lt;/li>
&lt;li>Mozilla&lt;/li>
&lt;li>WebKit&lt;/li>
&lt;/ul>
&lt;p>また、全く独自のコーディングスタイルを設定することもできるし、あるいはこれらのコーディングスタイルを元に一部を自分好みに変更した設定も可能である。かなり自由。&lt;/p></description></item><item><title>RailsAdminの日時選択が日本語でバグる</title><link>https://aquarite.info/blog/2014/01/rails-admin-jp-problem/</link><pubDate>Thu, 23 Jan 2014 20:08:42 +0900</pubDate><guid>https://aquarite.info/blog/2014/01/rails-admin-jp-problem/</guid><description>&lt;h1 id="概略">概略&lt;/h1>
&lt;p>Rails Adminでdatetime型（日時）のカラムを含むモデルを操作する際、ロケールが日本語で、かつ&lt;a href="https://github.com/svenfuchs/rails-i18n">svenfuchs/rails-i18n&lt;/a>のファイルをそのまま使っていると例外&lt;code>ArgumentError&lt;/code>(argument out of range)で死ぬ。&lt;/p>
&lt;h1 id="原因">原因&lt;/h1>
&lt;p>そもそも内部で使ってる&lt;code>Date._parse&lt;/code>（これはRubyの標準ライブラリである&amp;rsquo;time&amp;rsquo;に含まれる）が日本語形式（&lt;code>y年m月d日&lt;/code>）での日付のパースに対応していない。&lt;/p></description></item><item><title>ハロウフォゴットンワールド</title><link>https://aquarite.info/blog/2014/01/hello/</link><pubDate>Thu, 23 Jan 2014 07:20:02 +0900</pubDate><guid>https://aquarite.info/blog/2014/01/hello/</guid><description>&lt;p>よく見たらHello, World!だった。&lt;/p></description></item></channel></rss>