<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>.NET on Hello, (forgotten) world ☂</title><link>https://aquarite.info/tags/.net/</link><description>Recent content in .NET on Hello, (forgotten) world ☂</description><generator>Hugo</generator><language>ja-jp</language><copyright>&amp;copy; 2021 Mei Akizuru. All rights reserved.</copyright><lastBuildDate>Fri, 20 Jun 2014 11:09:26 +0900</lastBuildDate><atom:link href="https://aquarite.info/tags/.net/index.xml" rel="self" type="application/rss+xml"/><item><title>miocatのその後、あるいはcoinsLT #0で発表した話</title><link>https://aquarite.info/blog/2014/06/miocat-at-coinslt0/</link><pubDate>Fri, 20 Jun 2014 11:09:26 +0900</pubDate><guid>https://aquarite.info/blog/2014/06/miocat-at-coinslt0/</guid><description>&lt;p>情報科学類1年が企画した&lt;a href="http://atnd.org/events/51236">coinsLT #0&lt;/a>（ATNDの方が情報量が多いのだが、一応&lt;a href="http://coinslt.org/zero.html">Webページ&lt;/a>も存在している）で発表した。タイトルがクソ長いが要するにこのブログでいくつか投稿してきた、.NET FrameworkとMonoにおけるGetFullPathとかnew Uriの挙動の違いについてである。&lt;/p>
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/39806085" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> &lt;/iframe> &lt;div style="margin-bottom:5px"> &lt;strong> &lt;a href="//www.slideshare.net/maytheplic/coinslt0-miocat" title="coinsLT#0 tkbctf3 miocatができるまで" target="_blank">coinsLT#0 tkbctf3 miocatができるまで&lt;/a> &lt;/strong> from &lt;strong>&lt;a href="//www.slideshare.net/maytheplic" target="_blank">Mei Akizuru&lt;/a>&lt;/strong> &lt;/div>
&lt;p>実際の発表時の動画も公開されている。だいたい07:58あたりからが私の発表である。&lt;/p></description></item><item><title>Different Behaviors of DownloadString and Uri between .NET and Mono</title><link>https://aquarite.info/blog/2014/05/different-behaviors-of-downloadstring-and-uri-between-net-and-mono/</link><pubDate>Thu, 08 May 2014 07:43:38 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/different-behaviors-of-downloadstring-and-uri-between-net-and-mono/</guid><description>&lt;p>Note: This is the summary of my posts (they are written in Japanese):&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://tech.aquarite.info/blog/2014/05/07/tkbctf3-miocat/">tkbctf3 Miocat&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tech.aquarite.info/blog/2014/05/07/uri-parsing-in-webclient/">MonoのWebClientにおけるURI&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tech.aquarite.info/blog/2014/05/08/download-string-in-mono-and-dotnet-framework/">結局Monoと.NETの挙動の違いはなんだったのか&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I already reported this as a bug for Xamarin&amp;rsquo;s Bugzilla.&lt;/p>
&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>I found the different behavior of &lt;code>WebClient.DownloadString(String)&lt;/code> between Mono and .NET Framework when an invalid URI passed to it. In the Mono&amp;rsquo;s implementation, it may cause a security issue.&lt;/p>
&lt;p>This causes by two different behaviors, in &lt;code>new Uri(String)&lt;/code>, and &lt;code>Path.GetFullPath(String)&lt;/code>.&lt;/p>
&lt;h1 id="downloadstring">DownloadString&lt;/h1>
&lt;p>&lt;code>DownloadString(String)&lt;/code> and some methods (e.g. &lt;code>DownloadFile(String)&lt;/code>, &lt;code>OpenRead(String)&lt;/code>, etc.) calls &lt;code>CreateUri(String)&lt;/code>, a private method of &lt;code>WebClient&lt;/code>. (-&amp;gt; &lt;a href="https://github.com/mono/mono/blob/master/mcs/class/System/System.Net/WebClient.cs#L798">source code on github&lt;/a>)&lt;/p>
&lt;h2 id="createuri-and-geturi">CreateUri and GetUri&lt;/h2>
&lt;p>&lt;code>CreateUri(String)&lt;/code> tries to make an instance of &lt;code>Uri&lt;/code> with &lt;code>new Uri(String)&lt;/code>. If an invalid URI passed, the constructor raises an exception. For example, &lt;code>new Uri(&amp;quot;http://../../../etc/passwd&amp;quot;)&lt;/code> will be failed because its hostname part (&lt;code>..&lt;/code>) is invalid. However, the failure will be ignored, and &lt;code>CreateUri(String)&lt;/code> returns &lt;code>new Uri(Path.GetFullPath(String))&lt;/code>. It means the local file address with the full path will be returned.&lt;/p></description></item><item><title>結局Monoと.NETの挙動の違いはなんだったのか</title><link>https://aquarite.info/blog/2014/05/download-string-in-mono-and-dotnet-framework/</link><pubDate>Thu, 08 May 2014 06:49:41 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/download-string-in-mono-and-dotnet-framework/</guid><description>&lt;p>続・アレな文字を&lt;code>WebClient.DownloadString(String)&lt;/code>に渡すとローカルのファイルが読める&lt;/p>
&lt;p>ここ2つの記事でMonoの&lt;code>WebClient.DownloadString(string)&lt;/code>にアレな文字列渡すとローカルファイルを落としてきてしまうという挙動について調べてたわけですが、よくよくスタックトレースを見てみると、.NET Frameworkでも&lt;code>GetUri&lt;/code>というメソッドを経由して&lt;code>Path.GetFullPath&lt;/code>が呼ばれていたことがわかりました。&lt;/p></description></item></channel></rss>