<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CTF on Hello, (forgotten) world ☂</title><link>https://aquarite.info/tags/ctf/</link><description>Recent content in CTF on Hello, (forgotten) world ☂</description><generator>Hugo</generator><language>ja-jp</language><copyright>&amp;copy; 2021 Mei Akizuru. All rights reserved.</copyright><lastBuildDate>Sun, 07 Dec 2014 22:11:39 +0900</lastBuildDate><atom:link href="https://aquarite.info/tags/ctf/index.xml" rel="self" type="application/rss+xml"/><item><title>SECCON 2014 Online Qualification (December) write-up</title><link>https://aquarite.info/blog/2014/12/seccon2014-online-winter/</link><pubDate>Sun, 07 Dec 2014 22:11:39 +0900</pubDate><guid>https://aquarite.info/blog/2014/12/seccon2014-online-winter/</guid><description>&lt;h1 id="welcome-to-seccon-start-100">Welcome to SECCON (Start 100)&lt;/h1>
&lt;blockquote>
&lt;p>The answer is &amp;ldquo;SECCON{20141206}&amp;rdquo;.&lt;/p>
&lt;p>答えは、「SECCON{20141206}」です。&lt;/p>&lt;/blockquote>
&lt;p>驚くべきことに問題ページに答えが書かれている。なんと楽な問題なのだろう。&lt;/p>
&lt;p>Answer: &lt;code>SECCON{20141206}&lt;/code>&lt;/p>
&lt;h1 id="jspuzzle-web-100">jspuzzle (Web 100)&lt;/h1>
&lt;blockquote>
&lt;p>jspuzzle.zip&lt;/p>
&lt;p>You need to fill in all blanks!&lt;/p>&lt;/blockquote>
&lt;p>&lt;code>jspuzzle.zip&lt;/code>を展開すると&lt;code>q.html&lt;/code>と&lt;code>sha1.js&lt;/code>がある。&lt;code>sha1.js&lt;/code>はJavaScriptでSHA-1のハッシュ値を計算するライブラリの模様。本体は&lt;code>q.html&lt;/code>。&lt;/p></description></item><item><title>tkbctf4 [misc 400] amida</title><link>https://aquarite.info/blog/2014/11/tkbctf4-amida/</link><pubDate>Mon, 24 Nov 2014 06:11:50 +0900</pubDate><guid>https://aquarite.info/blog/2014/11/tkbctf4-amida/</guid><description>&lt;p>&lt;a href="https://aquarite.info/blog/2014/11/24/tkbctf4-cheerofcpu/">Cheer of CPU&lt;/a>に続きましてmisc 400、amidaでございます。&lt;/p>
&lt;p>この問題は私と@yuscarletによる作成です。&lt;/p>
&lt;h1 id="問題">問題&lt;/h1>
&lt;blockquote>
&lt;p>&lt;code>203.178.132.117:42719&lt;/code>&lt;/p>
&lt;p>&lt;a href="http://en.wikipedia.org/wiki/Ghost_Leg">Ghost Leg - Wikipedia, the free encyclopedia&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>現在問題文中のサーバーは停止しています。こちらもソースコードはgithubで公開されていますので、試したい方はどうぞ。&lt;a href="https://github.com/tkbctf/tkbctf4/tree/master/misc400_amida">tkbctf4/misc400_amida at master · tkbctf/tkbctf4&lt;/a>&lt;/p>
&lt;p>なお実際の問題は&lt;a href="https://github.com/mayth/fafrotskies">fafrotskies&lt;/a>というCPUを100%持っていく素敵な自作サーバーと連携して動作していました。&lt;/p>
&lt;p>問題中に英語版Wikipediaの&amp;quot;Ghost Leg&amp;quot;の記事にリンクが張ってありますが、「あみだくじ」って英語では&amp;quot;Ghost Leg&amp;quot;というそうです。&lt;/p></description></item><item><title>tkbctf4 [bin300] Cheer of CPU</title><link>https://aquarite.info/blog/2014/11/tkbctf4-cheerofcpu/</link><pubDate>Mon, 24 Nov 2014 04:16:38 +0900</pubDate><guid>https://aquarite.info/blog/2014/11/tkbctf4-cheerofcpu/</guid><description>&lt;p>tkbctf4が終了してからずいぶんと時間が経ちましたが皆様いかがお過ごしでしょうか。今更ではありますが[bin300] Cheer of CPUの解説というか、そんなようなものを書いてみようかと。&lt;/p>
&lt;p>なお、問題のソースコードと配布されたバイナリはtkbctfのgithubリポジトリにあるので、そちらもどうぞ。 &lt;a href="https://github.com/tkbctf/tkbctf4/tree/master/bin300_CheerOfCPU">tkbctf4/bin300_CheerOfCPU at master · tkbctf/tkbctf4&lt;/a>&lt;/p></description></item><item><title>CSAW CTF 2014 Quals Forensics</title><link>https://aquarite.info/blog/2014/09/csawctf2014-forensics/</link><pubDate>Tue, 23 Sep 2014 03:07:38 +0900</pubDate><guid>https://aquarite.info/blog/2014/09/csawctf2014-forensics/</guid><description>&lt;p>CSAW CTF 2014 Quals、Forensicsのwrite-upです。私が解いたのはForensicsの4問中、200点のObscurityを除いた3問です。&lt;/p>
&lt;h1 id="100-dumpster-diving">[100] dumpster diving&lt;/h1>
&lt;h2 id="問題文">問題文&lt;/h2>
&lt;blockquote>
&lt;p>dumpsters are cool, but cores are cooler&lt;/p>
&lt;p>Written by marc&lt;/p>
&lt;p>firefox.mem.zip&lt;/p>&lt;/blockquote>
&lt;h2 id="解答">解答&lt;/h2>
&lt;p>Answer: cd69b4957f06cd818d7bf3d61980e291&lt;/p>
&lt;p>与えられるのは&amp;rsquo;firefox.mem.zip&amp;rsquo;で、コアダンプです。私が取りかかった時点で既に他のメンバーからbinwalkしてみたらSQLiteのなんかが見えていると報告がありました。Firefoxのコアダンプであれば何か見えててもおかしくないですね。&lt;/p></description></item><item><title>CSAW CTF 2014 Quals Trivia</title><link>https://aquarite.info/blog/2014/09/csawctf2014-trivia/</link><pubDate>Mon, 22 Sep 2014 20:18:08 +0900</pubDate><guid>https://aquarite.info/blog/2014/09/csawctf2014-trivia/</guid><description>&lt;p>CSAW CTF 2014 Qualsに参加してました。日本時間で20日07:00から22日07:00までの48時間。都内某所に泊まり込みでした。そんな感じでWrite-upでございます。この記事はTrivia。&lt;/p>
&lt;p>Triviaは全て10点で全6問。うち私が解答したのは3問でした。&lt;/p>
&lt;h1 id="shameless-plug">Shameless plug&lt;/h1>
&lt;h2 id="問題文">問題文&lt;/h2>
&lt;p>This is the name of the new USENIX workshop that featured papers on CTFs being used for education.&lt;/p></description></item><item><title>SECCON 2014 オンライン予選 その他諸々</title><link>https://aquarite.info/blog/2014/07/seccon2014-online-preliminary/</link><pubDate>Sun, 20 Jul 2014 19:24:34 +0900</pubDate><guid>https://aquarite.info/blog/2014/07/seccon2014-online-preliminary/</guid><description>&lt;p>2014-07-19 09:00 - 21:00に行われたSECCON 2014 オンライン予選について、その他諸々。&lt;/p>
&lt;p>個別に書いたのは次の2つ。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aquarite.info/blog/2014/07/20/seccon2014-online-amida/">あみだくじ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aquarite.info/blog/2014/07/20/seccon2014-online-printit/">Print it&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>この2つとここで書かれていないのは問題見てすらいません˙꒳˙&lt;/p>
&lt;h2 id="decode-me">decode me&lt;/h2>
&lt;p>ダウンロードした&lt;code>encoded.txt&lt;/code>を見ると盛大に文字化けしてるんだけど、&lt;code>FRPPBA 2014&lt;/code>という文字を見た瞬間にここが&lt;code>SECCON 2014&lt;/code>であることを確信。ということは換字式暗号か何かなんだろうけど、&lt;code>ebg13/47&lt;/code>という文字が気になる。とここで@re_Ordが「rot13/47というのがあるらしい」。なんじゃそりゃと思って調べてみると、rot13を拡張したそういう暗号があるらしかった。&lt;/p></description></item><item><title>SECCON 2014 オンライン予選 【Print it!】</title><link>https://aquarite.info/blog/2014/07/seccon2014-online-printit/</link><pubDate>Sun, 20 Jul 2014 18:53:55 +0900</pubDate><guid>https://aquarite.info/blog/2014/07/seccon2014-online-printit/</guid><description>&lt;p>2014-07-19 09:00 - 21:00に行われたSECCON 2014 オンライン予選のWrite-upです。次は「Print it!」。&lt;/p>
&lt;h2 id="問題概要">問題概要&lt;/h2>
&lt;p>謎のファイルが降ってきます。以上。&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;p>降ってきたファイルの正体は&amp;quot;Standard Triangulated Language&amp;quot;というフォーマットのファイル(参考: &lt;a href="http://ja.wikipedia.org/wiki/Standard_Triangulated_Language">Wikipedia&lt;/a>)で、このフォーマットのバイナリ形式で記録された3Dモデルです。このファイルを適切なアプリケーションで開くと3Dモデルを見ることが出来て、そのモデルにフラグが書かれています。&lt;/p>
&lt;p>ans: &lt;code>Bar1kaTaLab.&lt;/code>&lt;/p>
&lt;h2 id="経緯">経緯&lt;/h2>
&lt;p>とりあえずファイルをバイナリエディタに突っ込んでビットマップで見てみると、かなり規則性の高いらしいということはわかったのですが、それ以上のことはさっぱりわからず。nullが14個くらい続いてたりとか、それが繰り返されてたりとか、その辺の規則性が高いわりに、先頭には普通にテキストが入っているし、テキストの間にはまたもnullが入っていてよくわかんないなぁと思ってました。&lt;/p></description></item><item><title>SECCON 2014 オンライン予選 【あみだくじ】</title><link>https://aquarite.info/blog/2014/07/seccon2014-online-amida/</link><pubDate>Sun, 20 Jul 2014 00:29:19 +0900</pubDate><guid>https://aquarite.info/blog/2014/07/seccon2014-online-amida/</guid><description>&lt;p>2014-07-19 09:00 - 21:00に行われたSECCON 2014 オンライン予選のWrite-upです。今回は「あみだくじ」。&lt;/p>
&lt;h2 id="問題概要">問題概要&lt;/h2>
&lt;p>問題は64bit ELF形式の実行ファイル&lt;code>amida&lt;/code>。これを実行すると「No.i」(i = 1, 2, &amp;hellip;)と書かれた行に続けて1から順に番号が振られたあみだくじが表示され、いずれかの終端の1箇所に*印がついている。……が、後になると&lt;/p></description></item><item><title>miocatのその後、あるいはcoinsLT #0で発表した話</title><link>https://aquarite.info/blog/2014/06/miocat-at-coinslt0/</link><pubDate>Fri, 20 Jun 2014 11:09:26 +0900</pubDate><guid>https://aquarite.info/blog/2014/06/miocat-at-coinslt0/</guid><description>&lt;p>情報科学類1年が企画した&lt;a href="http://atnd.org/events/51236">coinsLT #0&lt;/a>（ATNDの方が情報量が多いのだが、一応&lt;a href="http://coinslt.org/zero.html">Webページ&lt;/a>も存在している）で発表した。タイトルがクソ長いが要するにこのブログでいくつか投稿してきた、.NET FrameworkとMonoにおけるGetFullPathとかnew Uriの挙動の違いについてである。&lt;/p>
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/39806085" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> &lt;/iframe> &lt;div style="margin-bottom:5px"> &lt;strong> &lt;a href="//www.slideshare.net/maytheplic/coinslt0-miocat" title="coinsLT#0 tkbctf3 miocatができるまで" target="_blank">coinsLT#0 tkbctf3 miocatができるまで&lt;/a> &lt;/strong> from &lt;strong>&lt;a href="//www.slideshare.net/maytheplic" target="_blank">Mei Akizuru&lt;/a>&lt;/strong> &lt;/div>
&lt;p>実際の発表時の動画も公開されている。だいたい07:58あたりからが私の発表である。&lt;/p></description></item><item><title>tkbctf3 miocat</title><link>https://aquarite.info/blog/2014/05/tkbctf3-miocat/</link><pubDate>Wed, 07 May 2014 13:26:00 +0900</pubDate><guid>https://aquarite.info/blog/2014/05/tkbctf3-miocat/</guid><description>&lt;p>miocat（みお・きゃっと）はとある伝説の脱ヲタエンジニアが書き上げた伝説のプログラムに着想を得てっていうのはどうでもいいとして、実際のところは.NET Frameworkのとある仕様に関する問題です。&lt;strong>でした&lt;/strong>。以下本来の意図の説明です。&lt;/p>
&lt;h1 id="ソースコード">ソースコード&lt;/h1>
&lt;p>と、その前に。今回のソースコードは&lt;a href="https://github.com/tkbctf/archive">tkbctf/archive&lt;/a>に上げておきます。結構問題の核心以外の部分で苦労してたりしますがそれはそれということで。&lt;/p>
&lt;p>追記: 上げました -&amp;gt; &lt;a href="https://github.com/tkbctf/archive/tree/master/tkbctf3/web250_miocat">tkbctf/archive/tkbctf3/web250_miocat&lt;/a>&lt;/p></description></item></channel></rss>